<div 
  x-data="{
      selectedType: 'all',
      selectedMethod: 'all',
      searchQuery: '',
      courseCategories: ['all', 'web development', 'ui/ux', 'devops', 'mobile development', 'data science', 'cybersecurity'],
      currentPage: 1,
      itemsPerPage: 6,
      typeDropdownOpen: false,
      methodDropdownOpen: false,
      
      courseCategoriesData: [
        { value: 'all', icon: 'fa-layer-group', title: 'All Types', desc: 'All types of learning' },
        { value: 'web development', icon: 'fa-code', title: 'Web Development', desc: 'Build modern and responsive websites' },
        { value: 'ui/ux', icon: 'fa-palette', title: 'UI/UX Design', desc: 'Design engaging and user-friendly interfaces' },
        { value: 'devops', icon: 'fa-server', title: 'DevOps', desc: 'Automation, CI/CD, and deployment' },
        { value: 'mobile development', icon: 'fa-mobile-alt', title: 'Mobile Development', desc: 'Build iOS and Android applications' },
        { value: 'data science', icon: 'fa-chart-line', title: 'Data Science', desc: 'Data analysis, visualization, and machine learning' },
        { value: 'cybersecurity', icon: 'fa-shield-alt', title: 'Cybersecurity', desc: 'Protect and secure information systems' }
      ],
      
      methodOptions: [
        { value: 'all', icon: 'fa-th', title: 'All Methods', desc: 'Show all learning methods' },
        { value: 'online', icon: 'fa-laptop', title: 'Online', desc: 'Learn from anywhere with online classes' },
        { value: 'offline', icon: 'fa-map-marker-alt', title: 'Offline', desc: 'In-person classes at physical locations' }
      ],

      get selectedTypeItem() {
        return this.courseCategoriesData.find(c => c.value === this.selectedType) || this.courseCategoriesData[0];
      },

      get selectedMethodItem() {
        return this.methodOptions.find(m => m.value === this.selectedMethod) || this.methodOptions[0];
      },

      get filteredKelas() {
          return [...$refs.kelasList.children].filter(el => {
              const matchesType = this.selectedType === 'all' || 
                                el.dataset.category?.toLowerCase() === this.selectedType.toLowerCase();
              const matchesMethod = this.selectedMethod === 'all' || 
                                   el.dataset.location?.toLowerCase() === this.selectedMethod.toLowerCase();
              const matchesSearch = this.searchQuery === '' || 
                                  el.dataset.nama?.toLowerCase().includes(this.searchQuery.toLowerCase()) ||
                                  el.dataset.deskripsi?.toLowerCase().includes(this.searchQuery.toLowerCase());
              
              return matchesType && matchesMethod && matchesSearch;
          })
      },

      get totalPages() {
          return Math.ceil(this.filteredKelas.length / this.itemsPerPage)
      },

      paginatedKelas(el) {
          const idx = this.filteredKelas.indexOf(el)
          return idx >= (this.currentPage - 1) * this.itemsPerPage &&
                 idx < this.currentPage * this.itemsPerPage
      },

      resetFilters() {
          this.selectedType = 'all';
          this.selectedMethod = 'all';
          this.searchQuery = '';
          this.currentPage = 1;
      }
  }"
  class="bg-gradient-to-br from-white via-gray-50 to-white py-20 px-6 lg:px-20 relative overflow-visible"
  x-init="$watch('selectedMethod', () => currentPage = 1); $watch('selectedType', () => currentPage = 1); $watch('searchQuery', () => currentPage = 1)"
>

  <!-- Header Section -->
  <div class="text-center mb-16 relative mt-16">
      <h1 class="text-4xl md:text-5xl font-extrabold text-gray-900 mb-4 relative z-10">
          Bootcamp
      </h1>
  </div>

  <!-- Filter Section -->
  <div class="max-w-6xl mx-auto mb-16 relative z-10 overflow-visible">
      <div class="bg-white backdrop-blur-md border border-gray-200 rounded-2xl p-8 shadow-lg">
          <!-- Filter Title -->
          <div class="flex items-center gap-3 mb-6">
              <div class="w-1 h-8 bg-gradient-to-b from-gray-600 to-gray-700 rounded-full"></div>
              <h3 class="text-2xl font-bold text-gray-900">Find Your Perfect Class</h3>
          </div>

          <!-- Filter Controls -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6 relative z-50">
              
              <!-- Course Type Filter -->
              <div @click.away="typeDropdownOpen = false" class="group relative">
                  <label class="flex items-center gap-2 text-gray-700 font-semibold mb-3 text-sm uppercase tracking-wide">
                      <i class="fas fa-layer-group text-gray-600"></i>
                      Course Type
                  </label>
                  
                  <button
                      @click="typeDropdownOpen = !typeDropdownOpen"
                      type="button"
                      class="w-full px-5 py-4 pr-12 bg-white backdrop-blur-md border border-gray-300 rounded-2xl text-gray-900 font-medium focus:outline-none focus:ring-2 focus:ring-gray-500 transition-all duration-300 hover:border-gray-400 text-left relative"
                  >
                      <div class="flex items-center gap-3">
                          <i :class="selectedTypeItem.icon" class="fas text-gray-600"></i>
                          <span x-text="selectedTypeItem.title"></span>
                      </div>
                      <div class="absolute right-4 top-1/2 -translate-y-1/2 transition-transform duration-300" :class="typeDropdownOpen ? 'rotate-180' : ''">
                          <i class="fas fa-chevron-down text-gray-500 text-lg"></i>
                      </div>
                  </button>

                  <div
                      x-show="typeDropdownOpen"
                      x-transition
                      style="z-index: 9999"
                      class="absolute w-full mt-2 bg-white rounded-2xl shadow-xl border border-gray-200 overflow-hidden max-h-96 overflow-y-auto"
                  >
                      <template x-for="type in courseCategoriesData" :key="type.value">
                          <button
                              type="button"
                              @click="selectedType = type.value; typeDropdownOpen = false"
                              class="w-full px-5 py-4 text-left hover:bg-gray-50 transition-colors duration-200 flex items-start gap-4 group/item"
                              :class="selectedType === type.value ? 'bg-gray-50 border-r-4 border-gray-600' : ''"
                          >
                              <div class="w-10 h-10 rounded-full bg-gray-100 flex items-center justify-center flex-shrink-0 group-hover/item:bg-gray-200 transition-colors" :class="selectedType === type.value ? 'bg-gray-600 text-white' : 'text-gray-600'">
                                  <i :class="type.icon" class="fas"></i>
                              </div>
                              <div class="flex-1">
                                  <h4 class="font-bold text-gray-900 mb-1" x-text="type.title"></h4>
                                  <p class="text-sm text-gray-600" x-text="type.desc"></p>
                              </div>
                              <div x-show="selectedType === type.value" class="flex-shrink-0">
                                  <i class="fas fa-check text-gray-600"></i>
                              </div>
                          </button>
                      </template>
                  </div>
              </div>

              <!-- Method Filter (Online/Offline) -->
              <div @click.away="methodDropdownOpen = false" class="group relative">
                  <label class="flex items-center gap-2 text-gray-700 font-semibold mb-3 text-sm uppercase tracking-wide">
                      <i class="fas fa-laptop text-gray-600"></i>
                      Method
                  </label>
                  
                  <button
                      @click="methodDropdownOpen = !methodDropdownOpen"
                      type="button"
                      class="w-full px-5 py-4 pr-12 bg-white backdrop-blur-md border border-gray-300 rounded-2xl text-gray-900 font-medium focus:outline-none focus:ring-2 focus:ring-gray-500 transition-all duration-300 hover:border-gray-400 text-left relative"
                  >
                      <div class="flex items-center gap-3">
                          <i :class="selectedMethodItem.icon" class="fas text-gray-600"></i>
                          <span x-text="selectedMethodItem.title"></span>
                      </div>
                      <div class="absolute right-4 top-1/2 -translate-y-1/2 transition-transform duration-300" 
                           :class="methodDropdownOpen ? 'rotate-180' : ''">
                          <i class="fas fa-chevron-down text-gray-500 text-lg"></i>
                      </div>
                  </button>

                  <!-- Method Dropdown -->
                  <div
                      x-show="methodDropdownOpen"
                      x-transition
                      style="z-index: 9999"
                      class="absolute w-full mt-2 bg-white rounded-2xl shadow-xl border border-gray-200 overflow-hidden"
                  >
                      <template x-for="method in methodOptions" :key="method.value">
                          <button
                              type="button"
                              @click="selectedMethod = method.value; methodDropdownOpen = false"
                              class="w-full px-5 py-4 text-left hover:bg-gray-50 transition-colors duration-200 flex items-start gap-4 group/item"
                              :class="selectedMethod === method.value ? 'bg-gray-50 border-r-4 border-gray-600' : ''"
                          >
                              <div class="w-10 h-10 rounded-full bg-gray-100 flex items-center justify-center flex-shrink-0 group-hover/item:bg-gray-200 transition-colors" 
                                   :class="selectedMethod === method.value ? 'bg-gray-600 text-white' : 'text-gray-600'">
                                  <i :class="method.icon" class="fas"></i>
                              </div>
                              <div class="flex-1">
                                  <h4 class="font-bold text-gray-900 mb-1" x-text="method.title"></h4>
                                  <p class="text-sm text-gray-600" x-text="method.desc"></p>
                              </div>
                              <div x-show="selectedMethod === method.value" class="flex-shrink-0">
                                  <i class="fas fa-check text-gray-600"></i>
                              </div>
                          </button>
                      </template>
                  </div>
              </div>

              <!-- Search Input -->
              <div class="group">
                  <label class="flex items-center gap-2 text-gray-700 font-semibold mb-3 text-sm uppercase tracking-wide">
                      <i class="fas fa-search text-gray-600"></i>
                      Search
                  </label>
                  <div class="relative">
                      <input 
                          type="text" 
                          x-model="searchQuery"
                          placeholder="Type to search..." 
                          class="w-full px-5 py-4 pr-12 bg-white backdrop-blur-md border border-gray-300 rounded-2xl text-gray-900 placeholder-gray-400 font-medium focus:outline-none focus:ring-2 focus:ring-gray-500 transition-all duration-300 hover:border-gray-400"
                      >
                      <button 
                          x-show="searchQuery !== ''"
                          @click="searchQuery = ''"
                          class="absolute right-4 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600 transition-colors duration-200"
                      >
                          <i class="fas fa-times-circle text-xl"></i>
                      </button>
                  </div>
              </div>
          </div>

          <!-- Active Filters & Reset -->
          <div class="flex items-center justify-between flex-wrap gap-4" x-show="selectedType !== 'all' || searchQuery !== '' || selectedMethod !== 'all'">
              <div class="flex items-center gap-3 flex-wrap">
                  <span class="text-gray-600 text-sm font-medium">Active Filters:</span>
                  <span x-show="selectedType !== 'all'" class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg text-sm font-medium border border-gray-300">
                      <i class="fas fa-layer-group mr-2"></i><span x-text="selectedType"></span>
                  </span>
                  <span x-show="selectedMethod !== 'all'" class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg text-sm font-medium border border-gray-300">
                      <i class="fas fa-laptop mr-2"></i><span x-text="selectedMethod"></span>
                  </span>
                  <span x-show="searchQuery !== ''" class="px-4 py-2 bg-gray-100 text-gray-700 rounded-lg text-sm font-medium border border-gray-300">
                      <i class="fas fa-search mr-2"></i>"<span x-text="searchQuery"></span>"
                  </span>
              </div>
              <button 
                  @click="resetFilters()"
                  class="px-6 py-2.5 bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-500 hover:to-gray-600 text-white rounded-lg transition-all duration-300 transform hover:scale-105 shadow-lg font-medium"
              >
                  <i class="fas fa-redo mr-2"></i>Reset All
              </button>
          </div>
      </div>

      <!-- Results Counter -->
      <div class="mt-6 text-center">
          <p class="text-gray-600">
              Showing <span class="text-gray-900 font-bold" x-text="filteredKelas.filter((el, idx) => paginatedKelas(el)).length"></span> of 
              <span class="text-gray-900 font-bold" x-text="filteredKelas.length"></span> classes
          </p>
      </div>
  </div>

  <!-- Classes Grid -->
  <div 
    class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-7xl mx-auto relative overflow-visible"
    x-ref="kelasList"
  >
      {{#each kelas}}
<div 
  class="group card bg-white shadow-2xl border-0 rounded-2xl overflow-hidden transition-all duration-300 transform hover:-translate-y-2 hover:shadow-3xl"
  data-category="{{jenis_kelas.nama_jenis_kelas}}"
  data-nama="{{nama_kelas}}"
  data-deskripsi="{{deskripsi}}"
  data-location="{{metode}}"
  x-show="paginatedKelas($el)"
  x-transition
>
  <figure>
    <img src="{{gambar}}" alt="{{nama_kelas}}" 
         class="h-40 w-full object-cover group-hover:scale-105 transition-transform duration-300">
  </figure>

  <div class="card-body p-8">
    <!-- Kategori & Jenis Kelas -->
    <div class="flex gap-2 mb-3">
      <span class="badge bg-slate-100 text-slate-700 px-3 py-1 text-xs font-semibold rounded-full">
        {{kategori.nama_kategori}}
      </span>
      <span class="badge bg-gradient-to-r from-slate-500 to-slate-600 text-white px-3 py-1 text-xs font-semibold rounded-full">
        {{jenis_kelas.nama_jenis_kelas}}
      </span>
    </div>

    <!-- Metode & Posisi -->
    <div class="flex flex-wrap gap-2 mb-4 text-sm text-gray-700">
      <div class="flex items-center gap-2 bg-gray-100 px-3 py-1 rounded-full">
        <i class="fas fa-laptop text-gray-500"></i>
        <span>{{metode}}</span> <!-- Contoh: Online / Offline -->
      </div>
      <div class="flex items-center gap-2 bg-gray-100 px-3 py-1 rounded-full">
        <i class="fas fa-user-tie text-gray-500"></i>
        <span>{{lokasi}}</span> <!-- Contoh: Mentor / Coach / Instructor -->
      </div>
    </div>

    <!-- Nama Kelas -->
    <h2 class="card-title text-gray-900 text-2xl font-bold mb-2">{{nama_kelas}}</h2>

    <!-- Harga -->
    <p class="text-xs font-medium text-slate-500 text-start line-through">
      {{formatRupiah promo}}
    </p>
    <p class="text-xl font-bold text-slate-700 mb-3 animate-pulse">
      {{formatRupiah harga}}
    </p>

    <!-- Deskripsi -->
    <p class="text-base text-gray-600 line-clamp-3 leading-relaxed mb-4">
      {{deskripsi}}
    </p>

    <!-- Tombol -->
    <div class="card-actions justify-end mt-6">
      <a href="/kelass/{{id}}" 
         class="btn bg-gradient-to-r from-slate-600 to-slate-800 hover:from-slate-500 hover:to-slate-700 text-white text-lg px-8 py-3 w-full border-0 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1">
        View Class
      </a>
    </div>
  </div>
</div>

      {{/each}}
  </div>

  <!-- No Results -->
  <div x-show="filteredKelas.length === 0" class="text-center py-20" x-transition>
      <div class="bg-gray-100 backdrop-blur-md border border-gray-200 w-32 h-32 mx-auto mb-6 rounded-full flex items-center justify-center">
          <i class="fas fa-inbox text-5xl text-gray-400"></i>
      </div>
      <h3 class="text-3xl font-bold text-gray-900 mb-3">No Classes Found</h3>
      <p class="text-gray-600 text-lg mb-6">Try adjusting your search or filter criteria.</p>
      <button 
          @click="resetFilters()"
          class="px-6 py-3 bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 text-white rounded-lg transition-all duration-300 transform hover:scale-105 font-semibold shadow-md"
      >
          <i class="fas fa-redo mr-2"></i>Clear All Filters
      </button>
  </div>

  <!-- Pagination -->
  <div class="flex justify-center items-center gap-4 mt-12" x-show="totalPages > 1">
      <button 
          @click="currentPage = Math.max(1, currentPage - 1)"
          :disabled="currentPage === 1"
          class="px-5 py-3 bg-white border border-gray-300 hover:bg-gray-50 text-gray-700 rounded-xl disabled:opacity-40 disabled:cursor-not-allowed transition-all duration-300 shadow-sm"
      >
          <i class="fas fa-chevron-left"></i>
      </button>
      
      <template x-for="page in totalPages" :key="page">
          <button 
              @click="currentPage = page"
              class="w-12 h-12 rounded-xl text-lg font-semibold transition-all duration-300 border shadow-sm"
              :class="currentPage === page ? 'bg-gray-600 text-white border-gray-600 shadow-md' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'"
              x-text="page"
          ></button>
      </template>
      
      <button 
          @click="currentPage = Math.min(totalPages, currentPage + 1)"
          :disabled="currentPage === totalPages"
          class="px-5 py-3 bg-white border border-gray-300 hover:bg-gray-50 text-gray-700 rounded-xl disabled:opacity-40 disabled:cursor-not-allowed transition-all duration-300 shadow-sm"
      >
          <i class="fas fa-chevron-right"></i>
      </button>
  </div>
</div>